swagger: '2.0'
info:
  description: 'Management api for Hercules. Uses for create, midify, delete streams and timelines'
  version: 0.20.0
  title: Hercules management API
host: 'vm-hercules05:6507'
schemes:
  - http
paths:
  /ping:
    get:
      summary: Ping
      description: Check server status
      operationId: ping
      responses:
        '200':
          $ref: '#/responses/success'
  /about:
    get:
      summary: About
      description: Check server description
      operationId: about
      responses:
        '200':
          description: Info about service
          schema:
            $ref: '#/definitions/About'
  /streams/create:
    post:
      tags:
        - stream
      summary: Create stream
      description: Create stream
      operationId: createStream
      produces:
        - plain/text
      parameters:
        - $ref: '#/parameters/apiKey'
        - name: body
          in: body
          description: CreateStreamRequest
          schema:
            $ref: '#/definitions/Stream'
      responses:
        '200':
          $ref: '#/responses/success'
        '400':
          $ref: '#/responses/badRequest'
        '401':
          $ref: '#/responses/managementRulesIsAbsent'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/notFoundSourceStreams'
        '409':
          $ref: '#/responses/conflict'
  /streams/delete:
    post:
      tags:
        - stream
      summary: Delete stream
      description: Delete stream
      operationId: deleteStream
      parameters:
        - $ref: '#/parameters/apiKey'
        - name: stream
          in: query
          description: Stream name
          required: true
          type: string
          pattern: '[a-z0-9_]{1,48}'
      responses:
        '200':
          $ref: '#/responses/success'
        '400':
          $ref: '#/responses/badRequest'
        '401':
          $ref: '#/responses/managementRulesIsAbsent'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/notFound'
  /streams/list:
    get:
      tags:
        - stream
      summary: List streams
      description: List streams
      operationId: listStreams
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/apiKey'
      responses:
        '200':
          description: List of streams
          schema:
            type: array
            items:
              type: string
        '400':
          $ref: '#/responses/badRequest'
        '401':
          $ref: '#/responses/unauthorized'
  /streams/increasePartitions:
    post:
      tags:
        - stream
      summary: Increase stream partition count
      description: Increase stream partition count
      operationId: increasePartitions
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/apiKey'
        - name: stream
          in: query
          description: Stream name
          required: true
          type: string
          pattern: '[a-z0-9_]{1,48}'
        - name: newPartitions
          in: query
          description: new partitions count
          required: true
          type: integer
      responses:
        '200':
          $ref: '#/responses/success'
        '400':
          $ref: '#/responses/badRequest'
        '401':
          $ref: '#/responses/unauthorized'
  /streams/changeTtl:
    post:
      tags:
        - stream
      summary: Change stream ttl
      description: Change stream ttl
      operationId: changeStreamTtl
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/apiKey'
        - name: stream
          in: query
          description: Stream name
          required: true
          type: string
          pattern: '[a-z0-9_]{1,48}'
        - name: newTtl
          in: query
          description: New ttl
          required: true
          type: integer
      responses:
        '200':
          $ref: '#/responses/success'
        '400':
          $ref: '#/responses/badRequest'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/notFound'
  /streams/info:
    get:
      tags:
        - stream
      summary: Stream info
      description: Stream info
      operationId: streamInfo
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/apiKey'
        - name: stream
          in: query
          description: Stream name
          required: true
          type: string
          pattern: '[a-z0-9_]{1,48}'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Stream'
        '400':
          $ref: '#/responses/badRequest'
        '401':
          $ref: '#/responses/unauthorized'
        '404':
          $ref: '#/responses/notFound'
  /timelines/create:
    post:
      tags:
        - timeline
      summary: Create timeline
      description: Create timeline
      operationId: createTimeline
      parameters:
        - $ref: '#/parameters/apiKey'
        - name: body
          in: body
          description: CreateTimelineRequest
          schema:
            $ref: '#/definitions/Timeline'
      responses:
        '200':
          $ref: '#/responses/success'
        '400':
          $ref: '#/responses/badRequest'
        '401':
          $ref: '#/responses/managementRulesIsAbsent'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/notFoundSourceStreams'
        '409':
          $ref: '#/responses/conflict'
  /timelines/delete:
    post:
      tags:
        - timeline
      summary: Delete timeline
      description: Delete timeline
      operationId: deleteTimeline
      parameters:
        - $ref: '#/parameters/apiKey'
        - name: stream
          in: query
          description: Timeline name
          required: true
          type: string
          pattern: '[a-z0-9_]{1,48}'
      responses:
        '200':
          $ref: '#/responses/success'
        '400':
          $ref: '#/responses/badRequest'
        '401':
          $ref: '#/responses/managementRulesIsAbsent'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/notFound'
  /timelines/list:
    get:
      tags:
        - timeline
      summary: List timelines
      description: List timelines
      operationId: listTimelines
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/apiKey'
      responses:
        '200':
          description: List of timelines
          schema:
            type: array
            items:
              type: string
        '400':
          $ref: '#/responses/badRequest'
        '401':
          $ref: '#/responses/unauthorized'
  /timelines/changeTtl:
    post:
      tags:
        - timeline
      summary: Change timeline ttl
      description: Change timeline ttl
      operationId: changeTimelineTtl
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/apiKey'
        - name: timeline
          in: query
          description: Timeline name
          required: true
          type: string
          pattern: '[a-z0-9_]{1,48}'
        - name: newTtl
          in: query
          description: New ttl
          required: true
          type: long
      responses:
        '200':
          $ref: '#/responses/success'
        '400':
          $ref: '#/responses/badRequest'
        '401':
          $ref: '#/responses/unauthorized'
        '403':
          $ref: '#/responses/forbidden'
        '404':
          $ref: '#/responses/notFound'
  /timelines/info:
    get:
      tags:
        - timeline
      summary: Timeline info
      description: Timeline info
      operationId: timelineInfo
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/apiKey'
        - name: timeline
          in: query
          description: Timeline name
          required: true
          type: string
          pattern: '[a-z0-9_]{1,48}'
      responses:
        '200':
          description: OK
          schema:
            $ref: '#/definitions/Timeline'
        '400':
          $ref: '#/responses/badRequest'
        '401':
          $ref: '#/responses/unauthorized'
        '404':
          $ref: '#/responses/notFound'
  /rules/set:
    post:
      tags:
        - rules
      summary: Set rules
      description: Set rules
      operationId: setRules
      parameters:
        - $ref: '#/parameters/masterApiKey'
        - name: key
          in: query
          description: API key for which rule is set
          required: true
          type: string
          pattern: '[a-zA-Z0-9_\-]+'
        - name: pattern
          in: query
          description: Pattern for stream or timelime names
          required: true
          type: string
          pattern: '[a-z0-9_\*\?]+'
          #example: proj_name_*
        - name: rights
          in: query
          description: Combination of read, write and modified rights
          required: true
          type: string
          enum:
            - '---'
            - 'r--'
            - '-w-'
            - '--m'
            - 'rw-'
            - 'r-m'
            - '-wm'
            - 'rwm'
      responses:
        '200':
          $ref: '#/responses/success'
        '400':
          $ref: '#/responses/badRequest'
        '401':
          $ref: '#/responses/unauthorized'
  /rules/list:
    get:
      tags:
        - rules
      summary: List rules
      description: List rules
      operationId: listRules
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/masterApiKey'
      responses:
        '200':
          description: List of rules
          schema:
            type: array
            items:
              type: string
        '400':
          $ref: '#/responses/badRequest'
        '401':
          $ref: '#/responses/unauthorized'
  /blacklist/add:
    post:
      tags:
        - blacklist
      summary: Add apiKey to blacklist
      description: Add apiKey to blacklist
      operationId: addApiKeyToBlacklist
      parameters:
        - $ref: '#/parameters/masterApiKey'
        - name: key
          in: query
          description: API key for adding to blacklist
          required: true
          type: string
          pattern: '[a-zA-Z0-9_\-]+'
      responses:
        '200':
          $ref: '#/responses/success'
        '400':
          $ref: '#/responses/badRequest'
        '401':
          $ref: '#/responses/unauthorized'
  /blacklist/remove:
    post:
      tags:
        - blacklist
      summary: Remove apiKey from blacklist
      description: Remove apiKey from blacklist
      operationId: removeApiKeyFromBlacklist
      parameters:
        - $ref: '#/parameters/masterApiKey'
        - name: key
          in: query
          description: API key for adding to blacklist
          required: true
          type: string
          pattern: '[a-zA-Z0-9_\-]+'
      responses:
        '200':
          $ref: '#/responses/success'
        '400':
          $ref: '#/responses/badRequest'
        '401':
          $ref: '#/responses/unauthorized'
  /blacklist/list:
    get:
      tags:
        - blacklist
      summary: List blacklist
      description: List blacklist
      operationId: listBlacklist
      produces:
        - application/json
      parameters:
        - $ref: '#/parameters/masterApiKey'
      responses:
        '200':
          description: List of blacklist API-keys
          schema:
            type: array
            items:
              type: string
        '400':
          $ref: '#/responses/badRequest'
        '401':
          $ref: '#/responses/unauthorized'
definitions:
  Stream:
    type: object
    properties:
      type:
        type: string
        description: stream type
        enum:
          - base
          - derived
      name:
        type: string
      partitions:
        type: integer
      shardingKey:
        type: array
        items:
          type: string
      ttl:
        type: integer
      streams:
        type: array
        description: sources stream names
        items:
          type: string
      filters:
        type: array
        items:
          type: string
    example:
      type: base
      name: project_test_stream_0
      partitions: 1
      shardingKey: []
      ttl: 3600000
  Timeline:
    type: object
    properties:
      name:
        type: string
      slices:
        type: integer
      shardingKey:
        type: array
        items:
          type: string
      ttl:
        type: integer
      timetrapSize:
        type: integer
      streams:
        type: array
        items:
          type: string
      filters:
        type: array
        items:
          type: string
  About:
    type: object
    properties:
      applicationName:
        type: string
      applicationId:
        type: string
      version:
        type: string
      commitId:
        type: string
      environment:
        type: string
      zone:
        type: string
      hostName:
        type: string
      instanceId:
        type: string
parameters:
  apiKey:
    name: apiKey
    in: header
    type: string
    pattern: '^\d{3}-\d{2}-\d{4}$'
    required: true
    description: API key for authorization
  masterApiKey:
    name: masterApiKey
    in: header
    type: string
    pattern: '^\d{3}-\d{2}-\d{4}$'
    required: true
    description: API key for rules management
responses:
  unauthorized:
    description: Unauthorized
  managementRulesIsAbsent:
    description: Management rules for this apiKey is absent
  badRequest:
    description: Bad request
  forbidden:
    description: Forbidden for this API-key
  notFound:
    description: Not Found
  notFoundSourceStreams:
    description: Source streams not found
  conflict:
    description: Conflict. Entity already exists
  success:
    description: OK
